{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "MCP Microservice Schema",
  "description": "Schema for MCP (Model Context Protocol) microservices",
  "type": "object",
  "properties": {
    "service_id": {
      "type": "string",
      "pattern": "^[a-z0-9-]+$",
      "description": "Unique identifier for the microservice"
    },
    "mcp_info": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human-readable name of the microservice"
        },
        "description": {
          "type": "string",
          "description": "Description of the microservice functionality"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$",
          "description": "Version following semantic versioning"
        },
        "protocol_version": {
          "type": "string",
          "enum": ["1.0"],
          "description": "MCP protocol version"
        },
        "author": {
          "type": "string",
          "description": "Author of the microservice"
        },
        "license": {
          "type": "string",
          "description": "License under which the microservice is distributed"
        },
        "repository": {
          "type": "string",
          "format": "uri",
          "description": "Repository URL"
        },
        "documentation": {
          "type": "string",
          "format": "uri",
          "description": "Documentation URL"
        }
      },
      "required": ["name", "description", "version", "protocol_version"],
      "additionalProperties": false
    },
    "mqtt_config": {
      "type": "object",
      "properties": {
        "topic_pattern": {
          "type": "string",
          "default": "mcp/services/{service_id}",
          "description": "MQTT topic pattern for the service"
        },
        "qos": {
          "type": "integer",
          "enum": [0, 1, 2],
          "default": 1,
          "description": "Quality of Service level for MQTT messages"
        },
        "retain": {
          "type": "boolean",
          "default": false,
          "description": "Whether to retain MQTT messages"
        },
        "discovery_topic": {
          "type": "string",
          "default": "mcp/discovery/{service_id}",
          "description": "Topic for service discovery"
        },
        "heartbeat_topic": {
          "type": "string",
          "default": "mcp/heartbeat/{service_id}",
          "description": "Topic for heartbeat messages"
        }
      },
      "additionalProperties": false
    },
    "tools": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/MCPTool"
      },
      "description": "List of tools exposed by the microservice"
    },
    "resources": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/MCPResource"
      },
      "description": "List of resources exposed by the microservice"
    },
    "capabilities": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/MCPCapability"
      },
      "description": "List of capabilities supported by the microservice"
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the microservice was created"
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the microservice was last updated"
    }
  },
  "required": ["service_id", "mcp_info", "tools"],
  "additionalProperties": false,
  "$defs": {
    "MCPTool": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[a-z0-9_]+\\.[a-z0-9_]+$",
          "description": "Name of the tool in format namespace.method"
        },
        "description": {
          "type": "string",
          "description": "Description of what the tool does"
        },
        "inputSchema": {
          "type": "object",
          "description": "JSON Schema for tool input parameters"
        },
        "outputSchema": {
          "type": "object",
          "description": "JSON Schema for tool output"
        },
        "category": {
          "type": "string",
          "enum": ["utility", "data", "automation", "monitoring", "config", "ai", "iot"],
          "description": "Category of the tool"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags for discovery and filtering"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required permissions to use this tool"
        },
        "rate_limit": {
          "type": "object",
          "properties": {
            "calls": {
              "type": "integer",
              "minimum": 1
            },
            "period": {
              "type": "integer",
              "minimum": 1,
              "description": "Period in seconds"
            }
          },
          "required": ["calls", "period"],
          "description": "Rate limiting configuration"
        },
        "timeout": {
          "type": "integer",
          "minimum": 100,
          "description": "Timeout in milliseconds"
        },
        "caching": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "ttl": {
              "type": "integer",
              "minimum": 1,
              "description": "Time to live in seconds"
            }
          },
          "required": ["enabled"]
        }
      },
      "required": ["name", "description", "inputSchema", "category"],
      "additionalProperties": false
    },
    "MCPResource": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Unique resource identifier"
        },
        "name": {
          "type": "string",
          "description": "Human-readable name of the resource"
        },
        "description": {
          "type": "string",
          "description": "Description of the resource"
        },
        "mimeType": {
          "type": "string",
          "enum": ["application/json", "text/plain", "text/html", "image/png", "image/jpeg"],
          "description": "MIME type of the resource"
        },
        "resourceType": {
          "type": "string",
          "enum": ["widget", "page", "data", "config"],
          "description": "Type of resource"
        },
        "access": {
          "type": "object",
          "properties": {
            "read": {
              "type": "array",
              "items": {"type": "string"}
            },
            "write": {
              "type": "array",
              "items": {"type": "string"}
            }
          },
          "description": "Access control permissions"
        },
        "cache": {
          "type": "object",
          "properties": {
            "enabled": {"type": "boolean"},
            "ttl": {"type": "integer"}
          }
        }
      },
      "required": ["uri", "name", "mimeType", "resourceType"],
      "additionalProperties": false
    },
    "MCPCapability": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the capability"
        },
        "version": {
          "type": "string",
          "description": "Version of the capability"
        },
        "config": {
          "type": "object",
          "description": "Configuration for the capability"
        }
      },
      "required": ["name", "version"],
      "additionalProperties": false
    }
  }
}